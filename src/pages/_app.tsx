import React, { useEffect, useState } from "react";
import { GoogleOAuthProvider } from "@react-oauth/google";
import "@/styles/globals.css";
import type { AppProps } from "next/app";
import "bootstrap/dist/css/bootstrap.min.css";
import Head from "next/head";
import { QueryClientProvider, QueryClient } from "react-query";

const queryClient = new QueryClient();
const clientId =
  process.env.GOOGLE_CLIENT_ID ??
  "714119740864-86bb52urngugkd0t6iorv6cq5rv5ecvm.apps.googleusercontent.com";

export default function App({ Component, pageProps }: AppProps) {
  const [location, setLocation] = useState<{ latitude: number; longitude: number } | null>(null);

  useEffect(() => {
    if ("geolocation" in navigator) {
      navigator.geolocation.getCurrentPosition(
        (position) => {
          const { latitude, longitude } = position.coords;
          setLocation({ latitude, longitude });
        },
        (error) => {
          console.error("Error getting location:", error);
        }
      );
    } else {
      console.log("Geolocation not available");
    }
  }, []);

  return (
    <>
      <Head>
        <title>UNFood</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/images/logoUNFoodObj_0.png" />
      </Head>
      <QueryClientProvider client={queryClient}>
        <GoogleOAuthProvider clientId={clientId}>
          <div>
            {location ? (
              <p>
                Your location: Latitude {location.latitude}, Longitude {location.longitude}
              </p>
            ) : (
              <p>Fetching location...</p>
            )}
          </div>
          <Component {...pageProps} />
        </GoogleOAuthProvider>
      </QueryClientProvider>
    </>
  );
}
